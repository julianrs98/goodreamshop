//Maps

$breakpoints: (
  largeMobile : 500px,
  smallTablets: 590px,
  tablets: 630px,
  desktopsSmall : 770px,
  desktops : 940px,
  desktopsLarge : 1100px,
  desktopsXLarge : 1350px,
  desktopsXLLarge : 1600px,
);


// fonts maps


$h1-font-sizes: (
  null  : (12vw, 1.3),
  largeMobile : 11.2vw,
  smallTablets: 10vw,
  tablets: 7vw,
  desktopsSmall : auto,
  desktops : auto,
  desktopsLarge : 5vw,
  desktopsXLLarge : 4vw,
);

$h2-font-sizes: (
  null  : 9vw,
  largeMobile : 5vw,
  smallTablets: 9vw,
  tablets : 4.5vw,
  desktopsSmall : auto,
  desktops: auto,
  desktopsLarge: 4vw,
  desktopsXLarge : 3vw,
  desktopsXLLarge : 2vw,
);

$h3-font-sizes: (
  null  : 4vw,
  largeMobile : 16px,
  smallTablets: 4.5vw,
  tablets : 4vw,
  desktopsSmall : 3vw,
  desktops: auto,
  desktopsLarge: 2vw,
);


$circles-sizes: (
  smallTablets : 60vw,
  tablets : 45vw,
  desktops : 42vw,
  desktopsLarge : 35vw,
  desktopsXLarge : 29vw,
  desktopsXLLarge : 26vw,
);


//Mixins
//Mixins font sizes

@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      @include make-font-size($fs-font-size);
    }
    @else {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (min-width: $fs-breakpoint) {
        @include make-font-size($fs-font-size);
      }
    }
  }
};

// Utility function for mixin font-size
@mixin make-font-size($fs-font-size) {
  // If $fs-font-size is a list, include
  // both font-size and line-height
  @if type-of($fs-font-size) == "list" {
    font-size: nth($fs-font-size, 1);
    @if (length($fs-font-size) > 1) {
      line-height: nth($fs-font-size, 2);
    }
  }
  @else {
    font-size: $fs-font-size;
  }
};



@mixin buttonGene($width, $height, $fontsize) {
  font-size: $fontsize;
  padding: $width $height;
  color: white;
  background-color: $brandColor;
  border-radius: 20em;
  border: none;
  font-family: 'Pacifico', cursive;
  text-decoration: underline;
  @media screen and (min-width: map-get($breakpoints, "smallTablets"))  {
      padding: 0.6em 1.0em;
  }
  @content
};

//Circles

@mixin circleSizes($cs-map, $cs-breakpoints: $breakpoints) {
  @each $cs-breakpoint, $cs-font-size in $cs-map {
    @if $cs-breakpoint == null {
      height: $cs-font-size;
      width: $cs-font-size;
      .hero__circle--small {
        background-color: black;
      }
    }
    @else {
      @if map-has-key($cs-breakpoints, $cs-breakpoint) {
        $cs-breakpoint: map-get($cs-breakpoints, $cs-breakpoint);
      }
      @media screen and (min-width: $cs-breakpoint) {
        height: $cs-font-size;
        width: $cs-font-size;
        .hero__circle--small {
          height: $cs-font-size - 15;
          width: $cs-font-size - 15;
        }
      }
    }
  }
}






















